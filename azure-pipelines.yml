# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'
    PyPy3:
      python.version: 'pypy3'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -U twine
    curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
    PATH=$HOME/.poetry/bin:$PATH poetry self update
    PATH=$HOME/.poetry/bin:$PATH poetry install -E ci
  displayName: 'Install dependencies'

- script: |
    PATH=$HOME/.poetry/bin:$PATH poetry run pytest --cov-report=html:$(pwd)/htmlcov tests
  displayName: 'Run tests'

- script: |
    PATH=$HOME/.poetry/bin:$PATH poetry run pip install pytest-mypy
    PATH=$HOME/.poetry/bin:$PATH poetry run pytest --mypy -m mypy tinydb tests
  displayName: 'Perform type check'
  condition: and(succeeded(), ne('$[python.version]', 'pypy3'))

- script: |
    PATH=$HOME/.poetry/bin:$PATH poetry build
    twine check dist/*
  displayName: 'Check dist package format'
